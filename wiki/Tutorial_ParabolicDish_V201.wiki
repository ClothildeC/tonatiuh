#summary Analysis of the flux distribution at the focal plane of a Parabolic Dish using Tonatiuh release 2.0.1

= Introduction =

This tutorial explains how to use Tonatiuh release 2.0.1 to model a parabolic dish and simulate its optical behaviour. It also explains how to use Mathematica to process the output from Tonatiuh to estimate the concentrated solar flux distribution at the focal plane of the parabolic dish and related parameters, such as the maximum radius of such distribution, i.e., the size of the solar radiation spot at the focal plane.

= The concentrating system to model = 

The parabolic dish we are going to model is composed of a parabolic dish mirror and a flat disk receiver located in the focal plane of the mirror and centred at the focal point.

For simplicity, we are going to assume that the mirror is a perfect specular mirror of ideal paraboloidal shape and the receiver is a perfect absorber of ideal flat disk shape.

We are going to use the following values for the parameters defining the geometry of dish and the receiver:

  # Parabolic mirror
    * Radius = 5 meters
    * Focal length = 6.0454798 meters
  # Flat disk receiver
    * Radius = 0.06 meters

Such a parabolic dish, which has an f-Number (ratio of the focal length to the dish diameter) of 0.60454798, achieves the maximum geometric concentration ratio for a parabolic dish.

= Modelling the concentrating system =

== Creating the Group Node tree structure ==

After starting Tonatiuh release 2.0.1, do the following:

  # Add a Group Node to the !RootNode and label it "!ConcentratingSystem".
  # Add a Group Node to the "!ConcentratingSystem" Group Node and label it "!ParabolicDish".
  # Add a second Group Node to the "!ConcentratingSystem" Group Node and label it "!Receiver".

After doing this, Tonatiuh's user interface should look like this:

https://lh3.googleusercontent.com/-tt0_mGfueDI/Ur8wSe08dnI/AAAAAAAAE5g/L9tUnJ6fN1Y/w1117-h698-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture01.JPG

The 3D pane view located to the left of Tonatiuh's Graphics User Interface (GUI) does not show any surfaces, since we have not defined them yet. The Symbolic pane view located to the right of Tonatiuh's GUI shows the Group Node tree structure we have just created. In this tree structure, the Group Nodes represent three-dimensional reference frames. Each one of these reference frames can be translated and rotated with respect to the reference frame of their parents. The dimensions along the axes of each reference frame can be independently scaled. By default Tonatiuh creates the Group Note with the x-z plane as the horizontal plane and with the y-axis as the vertical axis, positive upwards. Since we have not changed the default parameters, the three reference frames created with the three Group Nodes just defined ("!ConcentratingSystem", "!ParabolicDish", "Receiver") are all coincident with the world reference frame represented by the Group Node "!RootNode".

== Modelling the parabolic dish ==

  # Click on the "!ParabolicDish" Group Node to select it. Add to it a Surface Node and keep the automatic label "!TShapeKit1" provided by Tonatiuh.
  # Click on the just created "!TShapeKit1" Surface Node and add to it:
    * A "!Parabolic_Dish" node.
    * A "!Specular_Standard_Material" node.

After doing this, if you select within the "View" menu the option "Edit Mode" and set up the four 3D-Windows of the 3D pane view appropriately, Tonatiuh's user interface should look like this:

https://lh4.googleusercontent.com/-oPSZUatZbKI/Ur9uYW4CZ2I/AAAAAAAAE6E/oaRBUlX0AQU/w1118-h603-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture02.JPG

As Tonatiuh's GUI shows, we have managed to create a parabolic dish. However, the parabolic dish that we have created is not the parabolic dish we wanted to model. The reason for this is that we have not changed the default values that Tonatiuh assigns to any newly created parabolic dish. This default values are:

  * A focal length "focusLength" of 0.125 meters.
  * A minimum radius "dishMinRadius" of 0.1 meters.
  * A maximum radius "dishMaxRadius" of 0.5 meters.
  * A maximum rotational angle "phiMax" of 2 Pi.
  * An active side for representation purposes "activeSide" of "OUTSIDE".

Obviously, we have to change the values assigned to some of the above listed variables to model the parabolic dish we are interested in. The changes that we need to carry out are the following:

  * Change the focal length "focusLength" to 6.0454798 meters.
  * Change the minimum radius "dishMinRadius" to 0. meters.
  * Change the maximum radius "dishMaxRadius" to 5 meters.
  * Change the  active side for representation purposes "activeSide" to "INSIDE".

After doing this, Tonatiuh's user interface should look like this:

https://lh3.googleusercontent.com/-pqokBTgdvzw/Ur91Wx6lAHI/AAAAAAAAE6U/IHHTJ3psXCw/w1118-h601-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture03.JPG

Although, we have modelled the geometry of the parabolic dish, we still have to model its physical properties. To do this, we select the "Specular_Standard_Material" node and change the values of the following variables from their default values to the following ones:

  * m_reflectivity = 1 (default value 0)
  * m_sigmaSlope = 0 (default value 2)

By setting the reflectivity to 1 and the sigma slope to 0 we are telling Tonatiuh that the mirror should be modelled as an ideal specular reflective mirror that follows exactly Descarte's law of reflection.

== Modelling the flat disk receiver ==

  # Click on the "Receiver" Group Node to select it and change the value of the translation variable from "0 0 0" to "0 6.0454798 0" in order to translate the flat disk's reference frame in the vertical y-direction and place its origin at the focal point of the mirror.
  # Add to the "Receiver" Group Node a Surface Node and keep the automatic label "TShapeKit1" provided by Tonatiuh.
  # Click on the just created "TShapeKit1" Surface Node and add to it:
    * A "!Flat_Disk" node.
    * A "!Specular_Standard_Material" node.
  # Select the "!Flat_Disk" node and change the "radius" from 0.5 meters (default) to 0.06 meters, and the "activeSide" from "FRONT" to "BACK".

After doing this, if you select within the "View" menu the option "Edit Mode" and set up the four 3D-Windows of the 3D pane view appropriately, Tonatiuh's user interface should look like this:

https://lh6.googleusercontent.com/-ajjNpeVy6pA/UsIDNqmJI6I/AAAAAAAAE6o/i5mDgtOdAE8/w1118-h600-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture04.JPG

= Modelling the direct solar radiation =

  # From Tonatiuh's menu bar select "Environment>Sun Light>Define !SunLight" in order to make the program to display the "Define !SunLight" dialog. 
  # In the "Sun Shape" tab of that dialogue, select "!Pillbox_Sunshape" as the "Sunshape Type".
  # Accept the default values provided by the program for the direct solar irradiance (1000 W/m2) and for the maximums half angle subtended by the direct solar radiation, "thetaMax" (0.00465 radians or 16 minutes of arc) and click "OK".

We do not need to change the azimuth and elevation of the sun vector, because by default the azimuth is considered 0 degrees and the elevation 90 degrees, that is, the sun vector, by default, is defined in the y-direction pointing upwards and, therefore, aligned with the optical axis of the parabolic mirror we just modelled.

= Ray tracing with Tonatiuh =

Once we have modelled the solar concentrating system and the incoming direct solar radiation, we are ready to run Tonatiuh in order to ray trace rays from the Sun into the concentrating system and collect the ray traced rays for post processing outside Tonatiuh.

To specify how many rays we want to generate, and other ray tracing options we go to the main menu bar and select "Ray Trace>Ray Trace Options" in order to make the program to display the "Ray Trace Options" pop up dialog, shown in the Figure below.

https://lh5.googleusercontent.com/-3GWf9q98T8w/Uskv-2OMaiI/AAAAAAAAE7o/ZqPYuYaVuOg/w360-h550-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture05.JPG

In this dialogue let us just modify the number of rays to be traced by Tonatiuh from the default value of 10000 to 75 million rays, and click the "OK" button.

Once this is done, let us run the ray tracer by selecting on the main menu the option "Ray trace>run". This will trigger the display by Tonatiuh of the "Photon Map Export Settings" dialogue.

In this dialogue, change the values of the following options from their default values to the ones indicated below:

  * Store type = Binary_file
  * Directory name = [The directory you want to store the results]
  * File name = Receiver
  * Select photons to store = Export surfaces
  * Select photons information to store:
    * Coordinates
    * Local Coordinates
    * Surface identifier = No (unselected) 

Since we have selected "Export surfaces" as the option of "Select photons to store" we need to specify which surfaces we are interested in. In our case, we are just interested in exporting the photons incident upon the flat disk receiver. Thus, we need to add that surface to the list of "Export surfaces". We do this by clicking on the "Add" button and selecting the appropriate surface in the "Select Surface Dialog" that will pop up. Actually, what we need to select is the "TShapeKit1" node that is the parent of the "Flat_disk" surface.

Once we have finished selecting and entering the appropriate values in the "Photon Map Export Settings" dialog, the content of such dialog should look like the Figure below:

https://lh4.googleusercontent.com/-G6Z6Vn7QqIo/UspGqGvSPDI/AAAAAAAAE80/Ew6cgp_EUhI/w665-h669-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture06.JPG

Now, to run the program we just need to click on the "OK" button of the "Photon Map Export Settings" dialog. How much time Tonatiuh will need to trace the 75 million rays depends on the characteristics of the computer in which we are running Tonatiuh. In principle, Tonatiuh should be able to detect the number of cores you have on your computer system and parallelize the ray tracing accordingly. When carrying out the ray tracing, Tonatiuh will display a dialog informing the user of the number threads it is using and degree of completion of the ray tracing activity, as shown in the Figure below.

https://lh4.googleusercontent.com/-rZrzgBByruo/Usoqs2g4o-I/AAAAAAAAE8c/CIT_cXMgzoo/w1598-h871-no/Tutorial_ParabolicDish_V201_TonatiuhScreenCapture07.JPG

 In the computer I used to develop this tutorial (a Dell laptop with an Intel Core i5.3360M at 2.8 GHz and 4 GB of RAM, running a 32/bit Windows 7 Enterprise operating system) it took Tonatiuh around 4 minutes to trace the 75 million rays and store the related information on disk.

= Post-processing Tonatiuh's output =

== Structure and content of Tonatiuh's results ==

After carrying out the ray tracing of the 75 million rays, Tonatiuh stored the information about the photons that it has traced in a series of binary files. Since we established as the core name of the files "Receiver", Tonatiuh generated 58 files, starting in the file "Receiver_1.dat" and ending in the file "Receiver_58.dat". As we established when selecting the options for the ray tracing, all of these files, but the last one, contain information about 10 million photons. 

In addition to the 58 binary data files, with information about the different photons incident on the flat disk receiver, Tonatiuh also generated a file entitled "Receiver_parameter.txt" with the following content:

{{{
START PARAMETERS
id
x
y
z
side
END PARAMETERS
START SURFACES
1 //SunNode/RootNode/ConcentratingSystem/Receiver/TShapeKit1
END SURFACES
0.00137342
}}}

The above information is essential to process the binary data files correctly. 

  * The information contained within the "START PARAMETERS" and "END PARAMETERS" labels, specify how the photon information on the binary data files is structured. 
  * The information contained within the "START SURFACES" and "END SURFACES" labels, specify the path of each of the !ShapeKits associated with the surfaces we exported. In our case, we just exported one surface -the flat disk receiver. In fact, saying that we exported a surface is a lose way of talking. What we actually exported are the photons impinging on either side of the surface.
  * Finally, the real number at the end of the file, just after the "END SURFACES" label, indicates the power per photon in Watts, to be considered when estimating concentrated solar fluxes and power values.

According to the information provided in the "Receiver_parameter.txt" file, the 58 binary data files contains of the order of 10 million of 5-tuples, with each 5-tuple providing the following information about a photon impinging on the disk flat receiver:

  * The photon id.
  * The x-coordinate of the photon.
  * The y-coordinate of the photon.
  * The z-coordinate of the photon.
  * The side of the surface in which the photon is impinging (0 if is in the back side, and 1 if is in the front side)

Since we selected "Local Coordinates" in the "Photon Map Export Settings" before ray tracing with Tonatiuh, the x, y, and z coordinates of the photons are given in the local coordinate reference frame of the flat disk receiver. In this reference frame, the flat disk receiver is located on the x - z plane with its "FRONT" side looking upwards in the direction of the positive y-coordinates. The centre of the flat disk receiver is located at the origin of the local reference frame. Since the photons are impinging on the flat disk receiver and this is located in the x-z plane of the local reference system, the y-coordinates of all the impinging photons should be zero. Due to numerical errors, it may be the case that these coordinates are not exactly zero. However, if they are not exactly zero, they should be extremely close to zero.

== Estimating the solar flux distribution at the receiver with Mathematica ==

=== Telling Mathematica where to look for Tonatiuh's results data files ===

To process Tonatiuh's results binary data files with Mathematica the first thing we need to do is to specify Mathematica the directory where the data files are located.

One way to do this is to set up the working directory of our Mathematica notebook file as the directory where Tonatiuh's binary data files are located, and one way to do this is to locate our Mathematica notebook in that directory, and instruct Mathematic to consider as its working directory the directory where the notebook is located. This is done, with the following instruction:

{{{
SetDirectory[NotebookDirectory[]]
}}}


 


TO BE CONTINUED...
[Tutorials Tutorials] | | [http://code.google.com/p/tonatiuh/w/list Wiki Home]